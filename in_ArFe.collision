# Initialisation

# ----------Start of user parameters----------
# Nanoparticle properties

variable temperature equal 1200.0
variable particle_radius equal 10.0
variable lattice_constant equal 2.866
variable lattice_type string bcc
variable nanoparticle_atom_mass equal 55.847
variable lj_params_epsilon equal 0.1086
variable lj_params_sigma equal 2.12

# Initial conditions

variable particle_initial_velocity_vx equal -5

# Colliding atom properties

variable colliding_atom_mass equal 39.9

# ----------End of user parameters----------

# Cell parameters, distance unit Angstrom, energy unit eV, time unit picosecond

units             metal
dimension         3
boundary          s s s
atom_style        full

# Generate spherical particle

lattice ${lattice_type} ${lattice_constant}

# if region style = block,  xlo xhi ylo yhi zlo zhi
region box block -20 20 -20 20 -20 20
create_box 2 box

region particle sphere 0 0 0 ${particle_radius} side in units box

# `particle' is the group-ID for the nanoparticle
create_atoms 1 region particle
group particle type 1 

# Generate single atom

create_atoms 2 single 15 0 0
group atom type 2

# Base parameters

mass 1 ${nanoparticle_atom_mass}
mass 2 ${colliding_atom_mass}
timestep 1.0e-3

# Potential definition, hybrid type

pair_style hybrid eam/fs lj/cut 12 zero 12
# pair_coeff * * eam/fs /Users/phankl/phd/lammps/potentials/Fe_mm.eam.fs Fe NULL
pair_coeff * * eam/fs /usr/share/lammps/potentials/Fe_mm.eam.fs Fe NULL
pair_coeff 1 2 lj/cut ${lj_params_epsilon} ${lj_params_sigma}
pair_coeff 2 2 zero

# thermo N = output thermodynamics every N timesteps
thermo 1000

## Equilibrate particle

velocity particle create ${temperature} 4928459 mom yes rot yes dist gaussian
fix nvt particle nvt temp ${temperature} ${temperature} 1

run 50000

unfix nvt
velocity particle scale ${temperature}
fix nve all nve

run 50000


# Output results every 100 timesteps

shell cd results
shell mkdir results_R${particle_radius}_epsilon${lj_params_epsilon}
shell cd results_R${particle_radius}_epsilon${lj_params_epsilon}

dump custom all custom 100 collision.lmp id type x y z
dump atom_dump atom custom 100 collision_atom.lpm x y z 

# Start collision simulation
# velocity atom set -10 0 0
velocity atom set ${particle_initial_velocity_vx} 0 0

compute pe_per_atom atom pe/atom
compute pe_colliding_atom atom reduce sum c_pe_per_atom
fix ave_pe all ave/time 1 1 1 c_pe_colliding_atom file pe_res.dat ave one
    

run 50000

print "LAMMPS simulation done."